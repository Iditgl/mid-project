# Step 2.1: Install Docker and its dependent components.

- name: install Docker
  sudo: yes
  yum:
    name: docker
    state: present
    update_cache: true

- name: start Docker service
  sudo: yes
  service:
    name: docker
    state: started
    enabled: yes
  tags: installation

- name: Ensure group "docker" exists
  sudo: yes
  group:
    name: docker
    state: present

#- name: Add vagrant user to docker group
#  user:
#    name: vagrant
#    group: docker
#  tags: installation

- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none
  tags: installation

- name: Disable swap
  command: swapoff -a
  # when: ansible_swaptotal_mb > 0
#   tags: installation

- name: Create List of nodes to be added into Cluster
  set_fact: nodelist={%for host in groups['kube-node']%}"{{hostvars[host].ansible_host}}"{% if not loop.last %},{% endif %}{% endfor %}

- debug: msg="{{nodelist}}"

# Step 2.3: Installing kubelet, kubeadm and kubectl using the below code.

- name: disable SELinux
  command: setenforce 0

- name: disable SELinux on reboot
  selinux:
   state: disabled

- name: add Kubernetes' YUM repository
  yum_repository:
    name: Kubernetes
    description: Kubernetes YUM repository
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    gpgcheck: yes

- name: install kubelet
  yum:
    name: kubelet-1.10.12
    state: present
    update_cache: true

- name: install kubeadm
  yum:
    name: kubeadm-1.10.12
    state: present
- name: install kubectl
  yum:
    name: kubectl-1.10.12
    state: present
    allow_downgrade: yes

- name: start kubelet
  service:
    name: kubelet
    enabled: yes
    state: started

# Step 2.3: Initialize the Kubernetes cluster with kubeadm using the below code (applicable only on master node).

- name: Initialize the Kubernetes cluster using kubeadm
  command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --ignore-preflight-errors=all --pod-network-cidr=192.168.0.0/16

# Step 2.4: Setup the kube config file for the vagrant user to access the Kubernetes cluster using the below code.

- name: Setup kubeconfig for vagrant user
  command: "{{ item }}"
  with_items:
   - mkdir -p ~/.kube
   - cp -i /etc/kubernetes/admin.conf ~/.kube/config
   - chown vagrant:vagrant ~/.kube/config

- name: Add Calico RBAC setting
  command: kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml

 #Step 2.5: Setup the container networking provider and the network policy engine using the below code.

- name: Install calico pod network
  command: kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/calico.yaml

#Step 2.6: Generate kube join command for joining the node to the Kubernetes cluster and store the command in the file named join-command.

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command

- name: Copy join command to local file
 # sudo: no
 # become: false
  local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="join-command"
